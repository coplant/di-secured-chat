"""initial

Revision ID: 9173db981d1c
Revises: 
Create Date: 2023-04-10 00:33:37.051501

"""
from datetime import datetime

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9173db981d1c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    roles_table = sa.Table('roles', sa.MetaData(), autoload_with=op.get_bind())
    op.bulk_insert(roles_table, [
        {'id': 100, 'name': 'admin'},
        {'id': 0, 'name': 'user'}
    ])

    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('uid', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('public_key', sa.String(), nullable=True),
                    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
                    sa.Column('has_changed_password', sa.Boolean(), nullable=True),
                    sa.Column('hashed_token', sa.String(length=1024), nullable=True),
                    sa.Column('logged_at', sa.TIMESTAMP(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
                    sa.Column('changed_at', sa.TIMESTAMP(), nullable=True),
                    sa.Column('role_id', sa.Integer(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name'),
                    sa.UniqueConstraint('uid'),
                    sa.UniqueConstraint('username')
                    )
    users_table = sa.Table('users', sa.MetaData(), autoload_with=op.get_bind())
    op.bulk_insert(users_table, [
        {
            'id': 1,
            'uid': 'f1a082a1ff4c1beae32891b4297cae4120f2ee94a2bf6b3b219ef0ad3549cf83',
            'name': 'Администратор',
            'username': 'admin',
            'hashed_password': '$2b$12$DXfaoE7b2.8LWd.NGBTrTuRn8MeQZUp2hHWXDm2N.Ov0MsfWXgErm',
            'has_changed_password': True,
            'logged_at': datetime.utcnow(),
            'created_at': datetime.utcnow(),
            'changed_at': datetime.utcnow(),
            'role_id': 100,
            'is_active': True
        }
    ])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
